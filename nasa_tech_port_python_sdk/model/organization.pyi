# coding: utf-8

"""
    TechPort

    TechPort RESTful API

    The version of the OpenAPI document: 3.13.2
    Contact: hq-techport@mail.nasa.gov
    Created by: https://techport.nasa.gov
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from nasa_tech_port_python_sdk import schemas  # noqa: F401


class Organization(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    A NASA center/facility associated with an project
    """


    class MetaOapg:
        
        class properties:
            organizationId = schemas.Int64Schema
            acronym = schemas.StrSchema
            fax = schemas.StrSchema
            isActive = schemas.BoolSchema
        
            @staticmethod
            def location() -> typing.Type['Location']:
                return Location
            locationId = schemas.Int64Schema
            organizationName = schemas.StrSchema
        
            @staticmethod
            def organizationType() -> typing.Type['LkuCode']:
                return LkuCode
            organizationTypeId = schemas.Int64Schema
            parentOrganizationId = schemas.Int64Schema
            phone = schemas.StrSchema
            replacementOrganizationId = schemas.Int64Schema
            url = schemas.StrSchema
            NAOrganization = schemas.BoolSchema
            external = schemas.BoolSchema
            linkCount = schemas.Int64Schema
            murepUnitId = schemas.Int64Schema
            ein = schemas.StrSchema
            uei = schemas.StrSchema
            dunsNumber = schemas.StrSchema
        
            @staticmethod
            def msiData() -> typing.Type['OrganizationMsiData']:
                return OrganizationMsiData
        
            @staticmethod
            def setAsideData() -> typing.Type['OrganizationSetAsideData']:
                return OrganizationSetAsideData
            __annotations__ = {
                "organizationId": organizationId,
                "acronym": acronym,
                "fax": fax,
                "isActive": isActive,
                "location": location,
                "locationId": locationId,
                "organizationName": organizationName,
                "organizationType": organizationType,
                "organizationTypeId": organizationTypeId,
                "parentOrganizationId": parentOrganizationId,
                "phone": phone,
                "replacementOrganizationId": replacementOrganizationId,
                "url": url,
                "NAOrganization": NAOrganization,
                "external": external,
                "linkCount": linkCount,
                "murepUnitId": murepUnitId,
                "ein": ein,
                "uei": uei,
                "dunsNumber": dunsNumber,
                "msiData": msiData,
                "setAsideData": setAsideData,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["organizationId"]) -> MetaOapg.properties.organizationId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["acronym"]) -> MetaOapg.properties.acronym: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fax"]) -> MetaOapg.properties.fax: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isActive"]) -> MetaOapg.properties.isActive: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["location"]) -> 'Location': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["locationId"]) -> MetaOapg.properties.locationId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["organizationName"]) -> MetaOapg.properties.organizationName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["organizationType"]) -> 'LkuCode': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["organizationTypeId"]) -> MetaOapg.properties.organizationTypeId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["parentOrganizationId"]) -> MetaOapg.properties.parentOrganizationId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["phone"]) -> MetaOapg.properties.phone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["replacementOrganizationId"]) -> MetaOapg.properties.replacementOrganizationId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["url"]) -> MetaOapg.properties.url: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["NAOrganization"]) -> MetaOapg.properties.NAOrganization: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["external"]) -> MetaOapg.properties.external: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["linkCount"]) -> MetaOapg.properties.linkCount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["murepUnitId"]) -> MetaOapg.properties.murepUnitId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ein"]) -> MetaOapg.properties.ein: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["uei"]) -> MetaOapg.properties.uei: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dunsNumber"]) -> MetaOapg.properties.dunsNumber: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["msiData"]) -> 'OrganizationMsiData': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["setAsideData"]) -> 'OrganizationSetAsideData': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["organizationId", "acronym", "fax", "isActive", "location", "locationId", "organizationName", "organizationType", "organizationTypeId", "parentOrganizationId", "phone", "replacementOrganizationId", "url", "NAOrganization", "external", "linkCount", "murepUnitId", "ein", "uei", "dunsNumber", "msiData", "setAsideData", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["organizationId"]) -> typing.Union[MetaOapg.properties.organizationId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["acronym"]) -> typing.Union[MetaOapg.properties.acronym, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fax"]) -> typing.Union[MetaOapg.properties.fax, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isActive"]) -> typing.Union[MetaOapg.properties.isActive, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["location"]) -> typing.Union['Location', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["locationId"]) -> typing.Union[MetaOapg.properties.locationId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["organizationName"]) -> typing.Union[MetaOapg.properties.organizationName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["organizationType"]) -> typing.Union['LkuCode', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["organizationTypeId"]) -> typing.Union[MetaOapg.properties.organizationTypeId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["parentOrganizationId"]) -> typing.Union[MetaOapg.properties.parentOrganizationId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["phone"]) -> typing.Union[MetaOapg.properties.phone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["replacementOrganizationId"]) -> typing.Union[MetaOapg.properties.replacementOrganizationId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["url"]) -> typing.Union[MetaOapg.properties.url, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["NAOrganization"]) -> typing.Union[MetaOapg.properties.NAOrganization, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["external"]) -> typing.Union[MetaOapg.properties.external, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["linkCount"]) -> typing.Union[MetaOapg.properties.linkCount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["murepUnitId"]) -> typing.Union[MetaOapg.properties.murepUnitId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ein"]) -> typing.Union[MetaOapg.properties.ein, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["uei"]) -> typing.Union[MetaOapg.properties.uei, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dunsNumber"]) -> typing.Union[MetaOapg.properties.dunsNumber, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["msiData"]) -> typing.Union['OrganizationMsiData', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["setAsideData"]) -> typing.Union['OrganizationSetAsideData', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["organizationId", "acronym", "fax", "isActive", "location", "locationId", "organizationName", "organizationType", "organizationTypeId", "parentOrganizationId", "phone", "replacementOrganizationId", "url", "NAOrganization", "external", "linkCount", "murepUnitId", "ein", "uei", "dunsNumber", "msiData", "setAsideData", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        organizationId: typing.Union[MetaOapg.properties.organizationId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        acronym: typing.Union[MetaOapg.properties.acronym, str, schemas.Unset] = schemas.unset,
        fax: typing.Union[MetaOapg.properties.fax, str, schemas.Unset] = schemas.unset,
        isActive: typing.Union[MetaOapg.properties.isActive, bool, schemas.Unset] = schemas.unset,
        location: typing.Union['Location', schemas.Unset] = schemas.unset,
        locationId: typing.Union[MetaOapg.properties.locationId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        organizationName: typing.Union[MetaOapg.properties.organizationName, str, schemas.Unset] = schemas.unset,
        organizationType: typing.Union['LkuCode', schemas.Unset] = schemas.unset,
        organizationTypeId: typing.Union[MetaOapg.properties.organizationTypeId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        parentOrganizationId: typing.Union[MetaOapg.properties.parentOrganizationId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        phone: typing.Union[MetaOapg.properties.phone, str, schemas.Unset] = schemas.unset,
        replacementOrganizationId: typing.Union[MetaOapg.properties.replacementOrganizationId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        url: typing.Union[MetaOapg.properties.url, str, schemas.Unset] = schemas.unset,
        NAOrganization: typing.Union[MetaOapg.properties.NAOrganization, bool, schemas.Unset] = schemas.unset,
        external: typing.Union[MetaOapg.properties.external, bool, schemas.Unset] = schemas.unset,
        linkCount: typing.Union[MetaOapg.properties.linkCount, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        murepUnitId: typing.Union[MetaOapg.properties.murepUnitId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        ein: typing.Union[MetaOapg.properties.ein, str, schemas.Unset] = schemas.unset,
        uei: typing.Union[MetaOapg.properties.uei, str, schemas.Unset] = schemas.unset,
        dunsNumber: typing.Union[MetaOapg.properties.dunsNumber, str, schemas.Unset] = schemas.unset,
        msiData: typing.Union['OrganizationMsiData', schemas.Unset] = schemas.unset,
        setAsideData: typing.Union['OrganizationSetAsideData', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'Organization':
        return super().__new__(
            cls,
            *args,
            organizationId=organizationId,
            acronym=acronym,
            fax=fax,
            isActive=isActive,
            location=location,
            locationId=locationId,
            organizationName=organizationName,
            organizationType=organizationType,
            organizationTypeId=organizationTypeId,
            parentOrganizationId=parentOrganizationId,
            phone=phone,
            replacementOrganizationId=replacementOrganizationId,
            url=url,
            NAOrganization=NAOrganization,
            external=external,
            linkCount=linkCount,
            murepUnitId=murepUnitId,
            ein=ein,
            uei=uei,
            dunsNumber=dunsNumber,
            msiData=msiData,
            setAsideData=setAsideData,
            _configuration=_configuration,
            **kwargs,
        )

from nasa_tech_port_python_sdk.model.lku_code import LkuCode
from nasa_tech_port_python_sdk.model.location import Location
from nasa_tech_port_python_sdk.model.organization_msi_data import OrganizationMsiData
from nasa_tech_port_python_sdk.model.organization_set_aside_data import OrganizationSetAsideData
